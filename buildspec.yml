version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
  build:
    commands:
      - echo Build started on $(date +"%Y%m%d_%H%M%S")
      - echo Building the Docker images...

      - docker-compose build
      - docker tag daphne:latest $REPOSITORY_URI:daphne_latest
      - docker tag nginx:latest $REPOSITORY_URI:nginx_latest
      - docker tag celery:latest $REPOSITORY_URI_celery:latest
      - docker tag lol_celery:latest $REPOSITORY_URI:lol_celery_latest
      # - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on $(date +"%Y%m%d_%H%M%S")
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:daphne_latest
      - docker push $REPOSITORY_URI:nginx_latest
      - docker push $REPOSITORY_URI_celery:latest
      - docker push $REPOSITORY_URI:lol_celery_latest

      - printf '[{"name":"plx-dev-main","imageUri":"%s"},{"name":"plx-dev-main","imageUri":"%s"},{"name":"plx-dev-main","imageUri":"%s"}]' $REPOSITORY_URI:daphne_latest $REPOSITORY_URI:nginx_latest $REPOSITORY_URI_celery:latest > imagedefinitions1.json
      - printf '[{"name":"plx-dev-lol","imageUri":"%s"}]' $REPOSITORY_URI:lol_celery_latest  > imagedefinitions2.json

artifacts:
  files:
    - imagedefinitions1.json
    - imagedefinitions2.json
