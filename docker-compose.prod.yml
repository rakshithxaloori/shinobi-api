version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfiles/api.Dockerfile
      args:
        - SECRET_KEY=${SECRET_KEY}
        - RDS_USERNAME=${RDS_USERNAME}
        - RDS_PASSWORD=${RDS_PASSWORD}
        - RDS_HOSTNAME=${RDS_HOSTNAME}
        - INSTAGRAM_CLIENT_ID=${INSTAGRAM_CLIENT_ID}
        - INSTAGRAM_CLIENT_SECRET=${INSTAGRAM_CLIENT_SECRET}
        - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
        - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
        - GOOGLE_EXPO_GO_APP_CLIENT_ID=${GOOGLE_EXPO_GO_APP_CLIENT_ID}
        - GOOGLE_ANDROID_APP_CLIENT_ID=${GOOGLE_ANDROID_APP_CLIENT_ID}
        - AWS_S3_ACCESS_KEY_ID=${AWS_S3_ACCESS_KEY_ID}
        - AWS_S3_SECRET_ACCESS_KEY=${AWS_S3_SECRET_ACCESS_KEY}
        - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
        - AWS_UPLOADS_BUCKET_NAME= ${AWS_UPLOADS_BUCKET_NAME}
        - AWS_SNS_ACCESS_KEY_ID=${AWS_SNS_ACCESS_KEY_ID}
        - AWS_SNS_SECRET_ACCESS_KEY=${AWS_SNS_SECRET_ACCESS_KEY}
        - AWS_SNS_TOPIC_ARN=${AWS_SNS_TOPIC_ARN}
        - AWS_MEDIACONVERT_ACCESS_KEY_ID=${AWS_MEDIACONVERT_ACCESS_KEY_ID}
        - AWS_MEDIACONVERT_SECRET_ACCESS_KEY=${AWS_MEDIACONVERT_SECRET_ACCESS_KEY}
        - AWS_MEDIACONVERT_JOB_ROLE=${AWS_MEDIACONVERT_JOB_ROLE}
        - GOOGLE_RECAPTCHA_SECRET_KEY=${GOOGLE_RECAPTCHA_SECRET_KEY}
        - ADMIN_URL=${ADMIN_URL}

        - RDS_DB_NAME=${RDS_DB_NAME}
        - RDS_PORT=${RDS_PORT}
        - CI_CD_STAGE=${CI_CD_STAGE}
        - REDIS_URL=${REDIS_URL}
        - OAUTH_REDIRECT_URI=${OAUTH_REDIRECT_URI}
        - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
        - AWS_SNS_REGION_NAME=${AWS_SNS_REGION_NAME}
        - AWS_MEDIACONVERT_REGION_NAME=${AWS_MEDIACONVERT_REGION_NAME}
        - AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN}

    image: api:latest
    command:
      - python manage.py migrate --noinput
      - python manage.py collectstatic --noinput
      - daphne -b 0.0.0.0 -p 8000 shinobi.asgi:application
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    restart: on-failure

  nginx:
    build: ./nginx.prod
    image: nginx:latest
    ports:
      - "80:80"
    restart: on-failure
    depends_on:
      - api

  celery:
    build:
      context: .
      dockerfile: Dockerfiles/celery.Dockerfile
      args:
        - SECRET_KEY=${SECRET_KEY}
        - RDS_USERNAME=${RDS_USERNAME}
        - RDS_PASSWORD=${RDS_PASSWORD}
        - RDS_HOSTNAME=${RDS_HOSTNAME}
        - INSTAGRAM_CLIENT_ID=${INSTAGRAM_CLIENT_ID}
        - INSTAGRAM_CLIENT_SECRET=${INSTAGRAM_CLIENT_SECRET}
        - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
        - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
        - GOOGLE_EXPO_GO_APP_CLIENT_ID=${GOOGLE_EXPO_GO_APP_CLIENT_ID}
        - GOOGLE_ANDROID_APP_CLIENT_ID=${GOOGLE_ANDROID_APP_CLIENT_ID}
        - AWS_S3_ACCESS_KEY_ID=${AWS_S3_ACCESS_KEY_ID}
        - AWS_S3_SECRET_ACCESS_KEY=${AWS_S3_SECRET_ACCESS_KEY}
        - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
        - AWS_UPLOADS_BUCKET_NAME= ${AWS_UPLOADS_BUCKET_NAME}
        - AWS_SNS_ACCESS_KEY_ID=${AWS_SNS_ACCESS_KEY_ID}
        - AWS_SNS_SECRET_ACCESS_KEY=${AWS_SNS_SECRET_ACCESS_KEY}
        - AWS_SNS_TOPIC_ARN=${AWS_SNS_TOPIC_ARN}
        - AWS_MEDIACONVERT_ACCESS_KEY_ID=${AWS_MEDIACONVERT_ACCESS_KEY_ID}
        - AWS_MEDIACONVERT_SECRET_ACCESS_KEY=${AWS_MEDIACONVERT_SECRET_ACCESS_KEY}
        - AWS_MEDIACONVERT_JOB_ROLE=${AWS_MEDIACONVERT_JOB_ROLE}
        - GOOGLE_RECAPTCHA_SECRET_KEY=${GOOGLE_RECAPTCHA_SECRET_KEY}
        - ADMIN_URL=${ADMIN_URL}

        - RDS_DB_NAME=${RDS_DB_NAME}
        - RDS_PORT=${RDS_PORT}
        - CI_CD_STAGE=${CI_CD_STAGE}
        - REDIS_URL=${REDIS_URL}
        - OAUTH_REDIRECT_URI=${OAUTH_REDIRECT_URI}
        - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
        - AWS_SNS_REGION_NAME=${AWS_SNS_REGION_NAME}
        - AWS_MEDIACONVERT_REGION_NAME=${AWS_MEDIACONVERT_REGION_NAME}
        - AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN}

    image: celery:latest
    command: celery -A shinobi worker -l INFO --uid=nobody --gid=nogroup -Q celery
    volumes:
      - .:/usr/src/app
    restart: on-failure
    depends_on:
      - api

  scheduler_celery:
    build:
      context: .
      dockerfile: Dockerfiles/scheduler_celery.Dockerfile
      args:
        - SECRET_KEY=${SECRET_KEY}
        - RDS_USERNAME=${RDS_USERNAME}
        - RDS_PASSWORD=${RDS_PASSWORD}
        - RDS_HOSTNAME=${RDS_HOSTNAME}
        - INSTAGRAM_CLIENT_ID=${INSTAGRAM_CLIENT_ID}
        - INSTAGRAM_CLIENT_SECRET=${INSTAGRAM_CLIENT_SECRET}
        - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
        - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
        - GOOGLE_EXPO_GO_APP_CLIENT_ID=${GOOGLE_EXPO_GO_APP_CLIENT_ID}
        - GOOGLE_ANDROID_APP_CLIENT_ID=${GOOGLE_ANDROID_APP_CLIENT_ID}
        - AWS_S3_ACCESS_KEY_ID=${AWS_S3_ACCESS_KEY_ID}
        - AWS_S3_SECRET_ACCESS_KEY=${AWS_S3_SECRET_ACCESS_KEY}
        - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
        - AWS_UPLOADS_BUCKET_NAME= ${AWS_UPLOADS_BUCKET_NAME}
        - AWS_SNS_ACCESS_KEY_ID=${AWS_SNS_ACCESS_KEY_ID}
        - AWS_SNS_SECRET_ACCESS_KEY=${AWS_SNS_SECRET_ACCESS_KEY}
        - AWS_SNS_TOPIC_ARN=${AWS_SNS_TOPIC_ARN}
        - AWS_MEDIACONVERT_ACCESS_KEY_ID=${AWS_MEDIACONVERT_ACCESS_KEY_ID}
        - AWS_MEDIACONVERT_SECRET_ACCESS_KEY=${AWS_MEDIACONVERT_SECRET_ACCESS_KEY}
        - AWS_MEDIACONVERT_JOB_ROLE=${AWS_MEDIACONVERT_JOB_ROLE}
        - GOOGLE_RECAPTCHA_SECRET_KEY=${GOOGLE_RECAPTCHA_SECRET_KEY}
        - ADMIN_URL=${ADMIN_URL}

        - RDS_DB_NAME=${RDS_DB_NAME}
        - RDS_PORT=${RDS_PORT}
        - CI_CD_STAGE=${CI_CD_STAGE}
        - REDIS_URL=${REDIS_URL}
        - OAUTH_REDIRECT_URI=${OAUTH_REDIRECT_URI}
        - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
        - AWS_SNS_REGION_NAME=${AWS_SNS_REGION_NAME}
        - AWS_MEDIACONVERT_REGION_NAME=${AWS_MEDIACONVERT_REGION_NAME}
        - AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN}

    image: scheduler_celery:latest
    command: celery -A shinobi beat
    volumes:
      - .:/usr/src/app
    restart: on-failure
    depends_on:
      - api
