REGION (resources to create in new regions)
    - VPC (use template)

    - Load balancer
        - Listeners
            - https 443 forward to target grp http 80
        - Security Group
            - HTTPS only
            - All ipv4, ipv6
        - Target groups
            - http


    - Create SGs for RDS DB, Redis first
    - RDS Database
    - Redis

    - ECR Repo

    - ECS
        - Cluster

        - Service
            - Security Group
                - Add My IP for ecs exec
                - Add LB SG
            - IAM Role
                - Param store
                - ECS Exec
                - S3 env file read

        - Task Definition
            - Task execution role
                - Inline policies
                    - S3 file only env access
                    - Execute command
                - Create policy
                    - Parameter required resources only access
                    - Secret Manager (in future)

            - Log groups for all containers
            - S3 env file
            - Secret values
            
        - Security Grp of Redis - Add sg of ecs service
        - SG of RDS DB - Add sg of ecs service, codebuild

    - Codecommit
        - Add MIRROR username password to Gitlab
    - Codebuild
        - Previleged true
        - S3 bucket policy
    - Codepipeline
        - Deploy stage (2 stages)
            - STAGE 1
                - service: main
            - STAGE 2
                - service: lol

    - S3 bucket for static files
        - IAM User
            - Inline policy

    # https://github.com/aws-samples/aws-media-services-vod-automation/blob/master/MediaConvert-WorkflowWatchFolderAndNotification/README-tutorial.md
    - SNS notification
        - Create a programmatic user
        - Create an SNS topic
        - Create an Event Bridge rule
    - S3 CORS Website accept
    - Set expiry in /uploads to 1 day
    - Cloudtrail
        - CMD
        # aws cloudtrail put-event-selectors --trail-name clips-put-delete \
        # --advanced-event-selectors '[
        #   {
        #     "Name": "Log PutObject and DeleteObject events for plx-dev-static/clips",
        #     "FieldSelectors": [
        #         { "Field": "eventCategory", "Equals": ["Data"] },
        #       { "Field": "resources.type", "Equals": ["AWS::S3::Object"] },
        #       { "Field": "eventName", "Equals": ["PutObject","DeleteObject"] },
        #       { "Field": "resources.ARN", "StartsWith": ["arn:aws:s3:::plx-dev-static/clips"] }
        #     ]
        #   }
        # ]'






{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ecs:ExecuteCommand"
            ],
            "Condition": {
                "StringEquals": {
                    "ecs:container-name": "plx-api"
                }
            },
            "Resource": "arn:aws:ecs:us-east-1:476691507110:cluster/plx-dev"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel"
            ],
            "Resource": "*"
        }
    ]
}